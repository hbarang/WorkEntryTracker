{"version":3,"sources":["TimeDisplayer.js","SpentTime.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","SimpleTable","_ref","rows","EditEntry","classes","react_default","a","createElement","Paper","className","Table","TableHead","TableRow","TableCell","align","TableBody","map","item","index","onClick","key","entry","toLocaleTimeString","departure","PositionedSnackbar","time","isOpen","_React$useState","React","useState","open","vertical","horizontal","state","Object","slicedToArray","Snackbar","anchorOrigin","concat","ContentProps","aria-describedby","message","id","msToTime","s","isNaN","secs","mins","App","dataCounter","snackBarOpen","handleEntry","Date","temp","toConsumableArray","_this","push","setState","prevState","length","getTime","handleReset","handleClose","event","reason","console","log","_this2","this","ButtonGroup","size","aria-label","Button","variant","color","Watch_default","Alarm_default","Delete_default","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.cc320f00.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nexport default function SimpleTable({ rows, EditEntry }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Entry</TableCell>\r\n            <TableCell align=\"center\">Departure</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((item, index) => (\r\n            <TableRow>\r\n              <TableCell\r\n                onClick={() => EditEntry(index)}\r\n                key={item.entry + 1}\r\n                align=\"center\"\r\n              >\r\n                {item.entry.toLocaleTimeString()}\r\n              </TableCell>\r\n              <TableCell key={item.departure + 2} align=\"center\">\r\n                {item.departure === \"\"\r\n                  ? \"\"\r\n                  : item.departure.toLocaleTimeString()}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport \"./styles.css\";\r\n\r\nexport default function PositionedSnackbar({ time, isOpen }) {\r\n  const [state] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n  const { vertical, horizontal } = state;\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        key={`${vertical},${horizontal}`}\r\n        open={isOpen}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">{time}</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport TimeDisplayer from \"./TimeDisplayer\";\nimport PositionedSnackbar from \"./SpentTime\";\nimport WatchIcon from \"@material-ui/icons/Watch\";\n\nimport \"./styles.css\";\n\nfunction createData(entry, departure) {\n  return { entry, departure };\n}\n\nfunction msToTime(s) {\n  if (isNaN(s)) {\n    return \"\";\n  }\n  var ms = s % 1000;\n  s = (s - ms) / 1000;\n  var secs = s % 60;\n  s = (s - secs) / 60;\n  var mins = s % 60;\n  var hrs = (s - mins) / 60;\n\n  return hrs + \":\" + mins + \":\" + secs;\n}\n\nclass App extends React.Component {\n  state = {\n    rows: [],\n    dataCounter: 0,\n    snackBarOpen: false,\n    time: 0\n  };\n\n  handleEntry = () => {\n    var fullDate = new Date();\n    var time = fullDate;\n    let temp = [...this.state.rows];\n\n    if (this.state.dataCounter % 2 === 0) {\n      temp.push(createData(time, \"\"));\n      this.setState(prevState => ({\n        rows: temp,\n        dataCounter: prevState.dataCounter + 1\n      }));\n    } else {\n      temp[temp.length - 1].departure = time;\n      this.setState(prevState => ({\n        rows: temp,\n        dataCounter: prevState.dataCounter + 1,\n        time:\n          prevState.time +\n          temp[temp.length - 1].departure.getTime() -\n          temp[temp.length - 1].entry.getTime()\n      }));\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      rows: [],\n      dataCounter: 0,\n      snackBarOpen: false,\n      time: 0\n    });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({\n      snackBarOpen: false\n    });\n  };\n\n  EditEntry = index => {\n    console.log(index);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TimeDisplayer EditEntry={this.EditEntry} rows={this.state.rows} />\n        <div className=\"TimeSpent\" />\n        <PositionedSnackbar\n          time={msToTime(this.state.time)}\n          isOpen={this.state.snackBarOpen}\n        />\n\n        <div className=\"Buttons\">\n          <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\n            <Button\n              onClick={() => {\n                this.setState(prevState => ({\n                  snackBarOpen: !prevState.snackBarOpen\n                }));\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"Button\"\n            >\n              Show time\n              <WatchIcon className=\"RightIcon\" />\n            </Button>\n            <Button\n              onClick={this.handleEntry}\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"Button\"\n            >\n              Entry/departure\n              <AlarmIcon className=\"RightIcon\" />\n            </Button>\n            <Button\n              onClick={this.handleReset}\n              className=\"Button\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Reset\n              <DeleteIcon className=\"RightIcon\" />\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}